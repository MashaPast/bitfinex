2020-02-26 14:51:37,971 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-02-26 14:51:37,972 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-02-26 14:51:37,998 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-02-26 14:51:38,050 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f002b5240f0>)
2020-02-26 14:51:38,051 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-02-26 14:51:38,052 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'SQZSfHuxHCVWarRfe+m4jA=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-02-26 14:51:38,209 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-02-26 14:51:38,210 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-02-26 14:51:38,211 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-02-26 14:51:38,211 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Wed, 26 Feb 2020 12:51:38 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=d5e09ebea8e1b57ddac058a70462179701582721498; expires=Fri, 27-Mar-20 12:51:38 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'ruyvmOpqXWOoqarL4+Ocojh1Y6c='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56b20d32eab2f2dc-WAW')])
2020-02-26 14:51:38,212 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-02-26 14:51:38,212 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"0b86cc2a-9e2b-4ae2-8682-dff5eb74bd20","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:38,216 module 'test_ticker_ws' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-02-26 14:51:38,217 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "ticker", "symbol": "tALGUST"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:38,287 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<199 bytes>)
2020-02-26 14:51:38,288 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"ticker","chanId":3138,"symbol":"tALGUST","pair":"ALGUST"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:38,288 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[3138,[0.37716,8909.49250353,0.38292,3980.4474868,-0.06121,-0.137,0.38572,4986.42913754,0.44693,0.38285]]', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:38,294 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-02-26 14:51:38,295 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:38,397 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-02-26 14:51:38,398 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:38,398 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-02-26 14:51:38,399 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-02-26 14:51:38,400 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-02-26 14:51:38,400 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-02-26 14:51:38,400 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
