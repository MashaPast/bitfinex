2020-03-06 17:09:49,822 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-03-06 17:09:49,823 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-03-06 17:09:49,925 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-03-06 17:09:50,038 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f61602ab2b0>)
2020-03-06 17:09:50,039 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-03-06 17:09:50,039 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'ggVM40aFFvqPIVGIJmbF4A=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-03-06 17:09:50,312 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-03-06 17:09:50,313 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-03-06 17:09:50,314 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Fri, 06 Mar 2020 15:09:50 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=d5f01eed5e0355d222335535098ebd8401583507390; expires=Sun, 05-Apr-20 15:09:50 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'oZIZCfdMRj+Y/c6Vy1lHdgj2Gio='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56fd0003eb46fe54-HEL')])
2020-03-06 17:09:50,314 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-03-06 17:09:50,315 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-03-06 17:09:50,315 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"13e39a51-be9d-467e-94b7-315deb2340a2","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:09:50,318 module 'test_raw_books' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-03-06 17:09:50,318 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "book", "prec": "R0", "symbol": "tANTBTC"}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:09:54,000 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<1659 bytes>)
2020-03-06 17:09:54,000 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"book","chanId":114404,"symbol":"tANTBTC","prec":"R0","freq":"F0","len":"25","pair":"ANTBTC"}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:09:54,000 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[114404,[[41253029860,0.00014272,186.95287648],[41253015553,0.00014269,230.55942604],[41253029642,0.00014268,490.6],[41253025854,0.00014267,35.04591014],[41251051173,0.00014238,3733],[41252009559,0.00014096,1977.01220204],[41251051174,0.00014093,1688],[41251051175,0.00013805,806],[41251051176,0.00013662,915],[41251051177,0.00013519,1640],[41079080472,0.000135,300],[41251179559,0.00013375,1838],[41153376607,0.000129,2500],[41204052363,0.000123,314.34559658],[40963075062,0.000115,30],[40261087349,0.0001065,8],[41252293217,0.00010201,123.3322],[41251186141,0.000102,100.402],[40354012968,0.0000951,13],[40963083675,0.00009,30],[41153376608,0.00008,1500],[40155275747,0.0000636,15],[40152860272,0.0000608,25],[40152860271,0.0000556,25],[40350118186,0.00005,300],[41251179560,0.00014957,-537],[41251179561,0.00015102,-769],[41251179562,0.00015245,-987],[41251179563,0.00015677,-954],[41251179564,0.0001654,-1725],[41251179565,0.00017259,-2991],[41161028019,0.0001776,-57.913211],[41252098657,0.000215,-221.220629],[26822649511,0.000234,-6],[41067212754,0.0002996,-40],[19191054235,0.0003,-1297.62961841],[25876676923,0.0003,-2007.29557268],[41145233034,0.0003987,-372.949836],[26822664703,0.0004,-6],[15651885386,0.000459,-40],[19191057225,0.00046,-1000],[40235055375,0.0005,-5430.67462799],[12606633454,0.0005198,-49.95],[12751931199,0.00071,-10.1319513],[11813198510,0.00074,-62.92],[39402071102,0.00078,-85.84],[38530294648,0.005,-21.63],[12463025944,0.098,-4.02],[31642836293,0.099,-10.978],[40184929519,0.49,-243.276428]]]', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:09:54,005 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-03-06 17:09:54,005 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:09:54,095 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-03-06 17:09:54,095 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:09:54,106 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-03-06 17:09:54,106 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-03-06 17:09:54,107 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-03-06 17:09:54,107 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-03-06 17:09:54,107 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
