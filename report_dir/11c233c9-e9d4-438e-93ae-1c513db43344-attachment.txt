2020-02-26 14:51:35,151 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-02-26 14:51:35,152 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-02-26 14:51:35,180 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-02-26 14:51:35,234 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f002b53a860>)
2020-02-26 14:51:35,235 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-02-26 14:51:35,236 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'BEw2sFHR9/aVD3owvzfwSg=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-02-26 14:51:35,407 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-02-26 14:51:35,408 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-02-26 14:51:35,409 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Wed, 26 Feb 2020 12:51:35 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=d48b37410331b5cb4e3f331f5ef8e38cc1582721495; expires=Fri, 27-Mar-20 12:51:35 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'fms//8O1PmYoJ2qrrAGy25tINHU='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56b20d2149dfcc8b-WAW')])
2020-02-26 14:51:35,409 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-02-26 14:51:35,413 module 'test_ticker_ws' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-02-26 14:51:35,414 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "ticker", "symbol": "tAIDETH"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:35,415 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-02-26 14:51:35,415 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"bd5f116b-9d52-47c5-b416-fc42ea4b4f30","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:35,485 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<191 bytes>)
2020-02-26 14:51:35,485 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"ticker","chanId":2794,"symbol":"tAIDETH","pair":"AIDETH"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:35,486 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[2794,[0.0000342,1513316.67,0.00010989,101015.11742159001,0,0,0.0000495,626,0.0000495,0.0000495]]', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:35,492 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-02-26 14:51:35,492 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:35,567 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-02-26 14:51:35,568 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:35,568 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-02-26 14:51:35,569 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-02-26 14:51:35,570 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-02-26 14:51:35,570 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-02-26 14:51:35,570 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
