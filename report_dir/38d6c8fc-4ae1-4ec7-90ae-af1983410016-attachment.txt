2020-03-06 17:09:40,178 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-03-06 17:09:40,179 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-03-06 17:09:40,197 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-03-06 17:09:40,324 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f61602980f0>)
2020-03-06 17:09:40,325 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-03-06 17:09:40,325 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'EWR99XJZQzxKZlH5/rAQ3Q=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-03-06 17:09:40,584 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-03-06 17:09:40,585 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-03-06 17:09:40,585 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Fri, 06 Mar 2020 15:09:40 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=d2de87b878db55498ae64c41cf53caade1583507380; expires=Sun, 05-Apr-20 15:09:40 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'O0w9l8zFiGUwkjkuqecArJFipJQ='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56fcffc72f9dfe48-HEL')])
2020-03-06 17:09:40,586 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-03-06 17:09:40,587 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-03-06 17:09:40,590 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"cc0580bb-64a7-4f19-9d58-0c9c3dd11d4b","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:09:40,590 module 'test_raw_books' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-03-06 17:09:40,590 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "book", "prec": "R0", "symbol": "tAMPUST"}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:09:49,704 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<1658 bytes>)
2020-03-06 17:09:49,704 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"book","chanId":118538,"symbol":"tAMPUST","prec":"R0","freq":"F0","len":"25","pair":"AMPUST"}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:09:49,704 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[118538,[[41250103881,1.5285,22.01742441],[41247809058,1.52,155.5],[41249705798,1.5131,22.99086959],[41245201032,1.498,26.22554069],[41252714145,1.4831,89.17885975],[41244630132,1.483,6.59859059],[41253021966,1.468,22.33397304],[41250110020,1.4534,189.21150406],[41250105531,1.4533,119.57288962],[41119428622,1.45,50],[41249718978,1.4388,112.61010761],[41119428623,1.43,50],[41245213988,1.4243,126.61983345],[41237439808,1.4101,124.44623408],[41119428624,1.41,50],[41251186632,1.3959,123.29686832],[41228628915,1.39,20],[41228628916,1.37,20],[41250023364,1.3667,124.29936948],[41228628917,1.35,20],[41245214531,1.3392,139.87553581],[41228628918,1.33,20],[41234550913,1.3124,126.40830226],[41228628919,1.31,20],[41228628920,1.29,20],[41253022322,1.537,-25.21495002],[41193195527,1.55,-95.3],[41237435209,1.5524,-25.27839876],[41193394560,1.555,-36],[41195144327,1.568,-185.694],[41245383642,1.568,-23.66866528],[41249707002,1.5839,-23.56840717],[41250104730,1.5998,-24.25495585],[41173624736,1.682,-103.41723951],[41173585244,1.6988,-102.84026925],[41190324891,1.7156,-99.71789037],[41172526427,1.7157,-102.26726067],[41172460278,1.7329,-106.3323824],[41251893751,1.7404,-110.12172529],[41178576889,1.7498,-107.14928423],[41249719959,1.7502,-93.46385796],[41173586513,1.7848,-99.42744953],[41172455068,1.8203,-87.40917699],[28907282375,1.85,-2.5],[41250106116,1.8566,-85.53671845],[41251893750,1.887,-206.03419571],[41150593372,1.979,-1187.0767504],[27893794074,1.98,-1864],[29150628497,2,-2.6142053],[28784814494,2.02,-33.85]]]', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:09:49,709 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-03-06 17:09:49,709 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:09:49,808 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-03-06 17:09:49,808 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:09:49,809 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-03-06 17:09:49,809 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-03-06 17:09:49,809 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-03-06 17:09:49,810 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-03-06 17:09:49,810 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
