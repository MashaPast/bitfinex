2020-02-26 14:50:22,002 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-02-26 14:50:22,003 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-02-26 14:50:22,094 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-02-26 14:50:22,178 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f002b524470>)
2020-02-26 14:50:22,179 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-02-26 14:50:22,179 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'ZT8C9TrPElNxoDymemYaug=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-02-26 14:50:22,362 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-02-26 14:50:22,363 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-02-26 14:50:22,363 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Wed, 26 Feb 2020 12:50:22 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=da8820ef3f525c7b6ed22a553680beea11582721422; expires=Fri, 27-Mar-20 12:50:22 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'aAc7dlXAj0AI0/b/7S9ijLOqBD0='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56b20b58cc08f28c-WAW')])
2020-02-26 14:50:22,364 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-02-26 14:50:22,365 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-02-26 14:50:22,368 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"205dfaeb-f365-48b1-9dd1-04e7c1bbd6e4","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:50:22,369 module 'test_raw_books' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-02-26 14:50:22,369 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "book", "prec": "R0", "symbol": "tAGIUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:50:23,445 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<125 bytes>)
2020-02-26 14:50:23,446 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"book","chanId":5866,"symbol":"tAGIUSD","prec":"R0","freq":"F0","len":"25","pair":"AGIUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:50:23,446 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<1456 bytes>)
2020-02-26 14:50:23,447 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[5866,[[40461387788,0.02,35000],[39410553974,0.01982,300],[38709168675,0.019783,24702.41140485],[39754150401,0.01875,500],[39351394821,0.017727,1100],[40598334272,0.01762,567.31151075],[38314514481,0.0173,220.9321162],[37936266017,0.017,1399],[38847959140,0.016019,3000],[40146927485,0.01601,500],[37510158231,0.016,10000],[37490519954,0.015797,950],[39363690424,0.015269,1150],[38297385145,0.0143,1000],[27301870827,0.0137,2000],[37510158232,0.012,50000],[17893806647,0.0115,10000],[31961176637,0.0112,2500],[24035046665,0.011083,7777],[19725680070,0.011012,312],[24035034462,0.010764,7777],[24035045935,0.010286,7777],[16082015682,0.01,50000],[24035036026,0.0090739,7777],[24035045504,0.0077849,7777],[40635761105,0.03417,-2489.61027345],[39745525586,0.034171,-1111],[23745665251,0.034493,-3333],[39778190603,0.034922,-7845],[37582676045,0.03577,-1111],[38332850337,0.0364,-499.521394],[37582676048,0.036828,-1111],[31782193817,0.038138,-1832],[39718699904,0.03814,-300],[39778190604,0.038789,-11440],[31313432978,0.0388,-2345.080951],[39795978817,0.039739,-17333.201779],[34295738451,0.039872,-7777],[38809539665,0.04,-5000],[39754409354,0.04,-500],[40489819837,0.042,-2319.717766],[34295738455,0.042714,-7777],[34295738449,0.044173,-7777],[40065431555,0.044349,-500.063288],[34141291941,0.0445,-540.353756],[23745694572,0.045592,-3333],[38509672243,0.045629,-1000],[27243797596,0.045807,-200],[27322847216,0.047,-1200],[23745671231,0.04768,-3333]]]', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:50:23,453 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-02-26 14:50:23,453 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:50:23,516 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-02-26 14:50:23,516 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:50:23,517 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-02-26 14:50:23,518 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-02-26 14:50:23,518 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-02-26 14:50:23,518 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-02-26 14:50:23,519 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
