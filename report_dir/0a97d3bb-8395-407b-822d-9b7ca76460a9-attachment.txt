2020-03-06 17:10:06,917 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-03-06 17:10:06,918 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-03-06 17:10:06,956 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-03-06 17:10:07,038 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f61602003c8>)
2020-03-06 17:10:07,038 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-03-06 17:10:07,039 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'QYlRYWW/lRQ+iIkFT1QqZg=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-03-06 17:10:07,311 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-03-06 17:10:07,312 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-03-06 17:10:07,312 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Fri, 06 Mar 2020 15:10:07 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=d91d0e9124a31511711a5621425ebc9b21583507407; expires=Sun, 05-Apr-20 15:10:07 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', '5JB8Ydv83mb7bAhSsGy6LV7iBWg='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56fd006e28d9fe34-HEL')])
2020-03-06 17:10:07,313 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-03-06 17:10:07,313 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-03-06 17:10:07,314 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"b5e55ff1-005b-48a8-a816-9101b9e81ebf","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:07,316 module 'test_ticker_ws' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-03-06 17:10:07,316 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "ticker", "symbol": "tAMPUST"}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:07,409 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<198 bytes>)
2020-03-06 17:10:07,410 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"ticker","chanId":121417,"symbol":"tAMPUST","pair":"AMPUST"}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:07,410 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[121417,[1.5285,1801.1859027599999,1.537,4855.35399314,0.0031,0.002,1.543,111715.62710004,1.549,1.46]]', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:07,415 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-03-06 17:10:07,415 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:07,619 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-03-06 17:10:07,620 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:07,620 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-03-06 17:10:07,621 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-03-06 17:10:07,621 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-03-06 17:10:07,622 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-03-06 17:10:07,622 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
