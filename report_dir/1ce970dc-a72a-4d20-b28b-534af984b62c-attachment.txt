2020-02-26 14:51:39,679 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-02-26 14:51:39,681 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-02-26 14:51:39,708 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-02-26 14:51:39,771 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f002b44df60>)
2020-02-26 14:51:39,772 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-02-26 14:51:39,772 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', '4A/ScxXQPD3m1b0PleKWUg=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-02-26 14:51:39,848 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-02-26 14:51:39,848 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-02-26 14:51:39,849 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-02-26 14:51:39,849 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Wed, 26 Feb 2020 12:51:39 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=d1cec40e5839c8db098c3df58bd0b1cd11582721499; expires=Fri, 27-Mar-20 12:51:39 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'ugw6bMZkSQgNaabvlx1nxSC5htw='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56b20d3dacfeffc4-WAW')])
2020-02-26 14:51:39,850 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-02-26 14:51:39,850 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"2bdf3adc-9f04-4237-b0dd-3ff60add87cf","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:39,854 module 'test_ticker_ws' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-02-26 14:51:39,855 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "ticker", "symbol": "tANTBTC"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:39,917 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<228 bytes>)
2020-02-26 14:51:39,918 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"ticker","chanId":2752,"symbol":"tANTBTC","pair":"ANTBTC"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:39,919 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[2752,[0.00011138,27040.365466609997,0.00011639,19747.367503380003,-0.00001193,-0.093,0.0001163,6081.72815853,0.00012823,0.0001132]]', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:39,923 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-02-26 14:51:39,923 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:39,991 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-02-26 14:51:39,992 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:39,993 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-02-26 14:51:39,994 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-02-26 14:51:39,994 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-02-26 14:51:39,994 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-02-26 14:51:39,995 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
