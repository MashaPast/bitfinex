2020-03-06 17:10:06,177 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-03-06 17:10:06,178 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-03-06 17:10:06,196 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-03-06 17:10:06,285 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f61602295f8>)
2020-03-06 17:10:06,285 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-03-06 17:10:06,286 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'nE7FtblPVg7WpP7EtoWu5Q=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-03-06 17:10:06,594 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-03-06 17:10:06,596 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-03-06 17:10:06,596 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Fri, 06 Mar 2020 15:10:06 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=d76d65e7146324c05e677f02cb04825e01583507406; expires=Sun, 05-Apr-20 15:10:06 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', '3WGgm8nzYeU3JjUZDHd8YApoTls='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56fd0069ac26fe24-HEL')])
2020-03-06 17:10:06,596 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-03-06 17:10:06,597 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-03-06 17:10:06,597 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"30d3e297-3fce-4804-b899-b42f35439588","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:06,600 module 'test_ticker_ws' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-03-06 17:10:06,600 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "ticker", "symbol": "tAMPUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:06,687 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<203 bytes>)
2020-03-06 17:10:06,687 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"ticker","chanId":129862,"symbol":"tAMPUSD","pair":"AMPUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:06,687 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[129862,[1.5367,3506.5732462600004,1.5453,7338.86937276,-0.0022,-0.0014,1.5495,101166.51339441,1.6,1.4551]]', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:06,690 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-03-06 17:10:06,690 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:06,902 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-03-06 17:10:06,902 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:06,903 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-03-06 17:10:06,904 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-03-06 17:10:06,904 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-03-06 17:10:06,904 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-03-06 17:10:06,905 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
