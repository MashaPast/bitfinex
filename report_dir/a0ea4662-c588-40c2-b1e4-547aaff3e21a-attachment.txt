2020-02-26 14:51:49,154 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-02-26 14:51:49,156 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-02-26 14:51:49,174 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-02-26 14:51:49,224 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f002b45eeb8>)
2020-02-26 14:51:49,225 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-02-26 14:51:49,225 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', '6y0dTlbtrL3C1vIsB6KPSQ=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-02-26 14:51:49,417 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-02-26 14:51:49,418 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-02-26 14:51:49,418 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Wed, 26 Feb 2020 12:51:49 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=de83d669f5cef5da6045e888c42ea9b641582721509; expires=Fri, 27-Mar-20 12:51:49 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'ue33zx8K5kpWPgC9EPt3aJOW8gU='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56b20d78bf0f7688-ARN')])
2020-02-26 14:51:49,419 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-02-26 14:51:49,423 module 'test_trades_ws' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-02-26 14:51:49,423 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "trades", "symbol": "tANTUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:49,424 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-02-26 14:51:49,425 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"10ef24bc-be45-41ce-9fdb-49372a5bf876","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:49,530 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<1355 bytes>)
2020-02-26 14:51:49,531 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"trades","chanId":2946,"symbol":"tANTUSD","pair":"ANTUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:49,531 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[2946,[[420072720,1582717399858,70,1.0774],[420072718,1582717258162,-53.17976775,1.0502],[420072710,1582716260078,87.4,1.124],[420072703,1582715436103,-58.92620007,1.0501],[420072702,1582715426761,-65.47318064,1.0501],[420072700,1582715287985,13.43245378,1.0784],[420072695,1582714784346,50,1.0792],[420072683,1582713742624,41.59,1.1364],[420072682,1582713742624,49.8,1.1233],[420072667,1582711630366,100,1.0792],[420072663,1582711110395,28.75376938,1.1567],[420072662,1582711110395,60,1.1447],[420072661,1582711110395,39.8,1.1284],[420072660,1582711110395,75.95623062,1.126],[420072619,1582705340834,100,1.0784],[420072618,1582705289352,24.52071442,1.0784],[420072617,1582705289150,82.790825,1.0784],[420072615,1582705219827,16.01653395,1.1678],[420072614,1582705219827,75.51247,1.1668],[420072613,1582705219827,23.32416837,1.1361],[420072612,1582705219827,65.97682768,1.1312],[420072606,1582704489787,-80.675012,1.05],[420072581,1582700848257,23.37091019,1.0785],[420072580,1582700845535,75.663797,1.0785],[420072573,1582700011581,3.89,1.1789],[420072572,1582700011581,120,1.175],[420072542,1582696443113,0.07258072,1.179],[420072541,1582696443113,54.13575726,1.177],[420072540,1582696443113,69.54166202,1.1769],[420072495,1582692879231,21.94687674,1.177]]]', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:49,536 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-02-26 14:51:49,537 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:49,596 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-02-26 14:51:49,596 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:49,597 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-02-26 14:51:49,598 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-02-26 14:51:49,598 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-02-26 14:51:49,598 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-02-26 14:51:49,599 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
