2020-03-06 17:10:08,981 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-03-06 17:10:08,982 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-03-06 17:10:09,038 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-03-06 17:10:09,157 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f61601bd940>)
2020-03-06 17:10:09,158 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-03-06 17:10:09,158 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'gYwzTLYCqsMpU8Po/bXtcA=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-03-06 17:10:09,462 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-03-06 17:10:09,463 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-03-06 17:10:09,463 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Fri, 06 Mar 2020 15:10:09 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=db4d8dd073015043589f5d196249a3c691583507409; expires=Sun, 05-Apr-20 15:10:09 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'rMtGTO2ml+2zq6tBy+w0DdjAbGs='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56fd007b6bfefe54-HEL')])
2020-03-06 17:10:09,464 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-03-06 17:10:09,464 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-03-06 17:10:09,464 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"b78f665d-6cd1-4e17-bde5-a3520a5552e6","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:09,467 module 'test_ticker_ws' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-03-06 17:10:09,467 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "ticker", "symbol": "tANTUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:09,568 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<195 bytes>)
2020-03-06 17:10:09,569 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"ticker","chanId":165900,"symbol":"tANTUSD","pair":"ANTUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:09,569 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[165900,[1.35,16029.02618143,1.3799,9869.91771411,0.0377,0.0273,1.4167,5468.13408802,1.447,1.3003]]', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:09,575 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-03-06 17:10:09,575 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:09,693 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-03-06 17:10:09,694 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:09,694 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-03-06 17:10:09,695 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-03-06 17:10:09,695 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-03-06 17:10:09,696 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-03-06 17:10:09,696 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
