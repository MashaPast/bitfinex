2020-02-26 14:48:51,721 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-02-26 14:48:51,722 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-02-26 14:48:51,754 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-02-26 14:48:51,792 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f002b5517f0>)
2020-02-26 14:48:51,793 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-02-26 14:48:51,793 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', '5IwJ/TRkHq85eErTlftENg=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-02-26 14:48:51,964 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-02-26 14:48:51,966 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-02-26 14:48:51,966 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Wed, 26 Feb 2020 12:48:51 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=d0b8c4079ca6744491f5d58d06a10d1ef1582721331; expires=Fri, 27-Mar-20 12:48:51 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'NBTnceH85DRs7L6mjoaV8MfDvH8='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56b20923c828dabc-ARN')])
2020-02-26 14:48:51,967 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-02-26 14:48:51,967 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-02-26 14:48:51,968 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"0b86cc2a-9e2b-4ae2-8682-dff5eb74bd20","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:48:51,972 module 'test_books_ws' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-02-26 14:48:51,972 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "book", "symbol": "tAIDUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:48:55,046 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<1151 bytes>)
2020-02-26 14:48:55,046 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"book","chanId":3085,"symbol":"tAIDUSD","prec":"P0","freq":"F0","len":"25","pair":"AIDUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:48:55,047 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[3085,[[0.010001,1,22102],[0.01,1,1242.38210193],[0.009765,1,24801],[0.009177,1,4790.2],[0.0089,1,20204.494384],[0.008638,1,6000],[0.008,2,2526],[0.007865,1,1000],[0.0072038,1,27770],[0.0071469,1,2100],[0.00701,1,626],[0.006568,1,6500],[0.0062505,1,14425.27702104],[0.0029507,1,300],[0.002381,1,10000],[0.0021,1,2000],[0.0017959,1,3000],[0.0015625,1,3200],[0.0014803,1,300],[0.00131,1,6000],[0.0012,1,9000],[0.001,1,10000],[0.0009,1,1000],[0.00079475,1,300],[0.0004,1,20000],[0.013,2,-3447.231597],[0.013284,1,-1999],[0.01399,1,-2100],[0.014,1,-4367.372311],[0.0143,1,-1151.817242],[0.014487,1,-6999.599729],[0.0145,1,-26855.751959],[0.014899,2,-2724.300199],[0.019,1,-999],[0.021,1,-909.94601366],[0.021899,1,-8901],[0.022,1,-14348.25155299],[0.0223,1,-15177.017317],[0.023488,1,-5934.508428],[0.023786,1,-500],[0.024135,1,-182.617694],[0.0245,1,-1639.22474],[0.024735,1,-240],[0.0248,1,-2997],[0.0249,1,-999],[0.025,4,-7488.598769],[0.0283,1,-5441.98041045],[0.0285,1,-1472.19],[0.03,4,-31805.304506],[0.03195,1,-2497]]]', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:48:55,055 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-02-26 14:48:55,055 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:48:55,207 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-02-26 14:48:55,207 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:48:55,208 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-02-26 14:48:55,209 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-02-26 14:48:55,209 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-02-26 14:48:55,209 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-02-26 14:48:55,210 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
