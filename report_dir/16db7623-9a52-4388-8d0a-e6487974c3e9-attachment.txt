2020-02-26 14:49:02,000 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-02-26 14:49:02,001 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-02-26 14:49:02,034 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-02-26 14:49:02,087 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f002b56be80>)
2020-02-26 14:49:02,088 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-02-26 14:49:02,089 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'imzCAyz214bzdWHDTAML2Q=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-02-26 14:49:02,255 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-02-26 14:49:02,257 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-02-26 14:49:02,257 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Wed, 26 Feb 2020 12:49:02 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=d8a3f9bcfc5c8fb0dc2f0ec1b8bd8cc271582721342; expires=Fri, 27-Mar-20 12:49:02 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'X9FYhX/wxJbDEyrN1DMKjAkNH5s='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56b209641f4af14a-ARN')])
2020-02-26 14:49:02,258 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-02-26 14:49:02,262 module 'test_books_ws' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-02-26 14:49:02,262 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "book", "symbol": "tAIOUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:49:02,263 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-02-26 14:49:02,263 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"09025617-086b-41ca-832a-c5466a25d050","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:49:04,948 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<969 bytes>)
2020-02-26 14:49:04,949 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"book","chanId":3101,"symbol":"tAIOUSD","prec":"P0","freq":"F0","len":"25","pair":"AIOUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:49:04,949 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[3101,[[0.45,1,98.14670247],[0.13201,1,1355.17131573],[0.132,1,500],[0.131,1,326.142837],[0.127,1,50],[0.11624,1,200],[0.11475,1,87.14445064],[0.111,1,85],[0.11,1,438.190822],[0.1068,1,936.30495303],[0.105,1,455],[0.10411,1,70],[0.10166,1,350],[0.0975,1,155],[0.0931,1,260],[0.0862,1,100],[0.0861,1,500],[0.0815,1,3005],[0.0812,1,600],[0.07699,1,1174],[0.0752,1,700],[0.071,1,800],[0.069915,3,60000],[0.0622,1,100],[0.059,1,59],[0.6,1,-50],[0.62878,1,-159.96294428],[0.68708,1,-178],[0.71,1,-500],[0.73512,1,-99],[0.76,1,-1094.85],[0.7654,1,-29.62140899],[0.789,1,-149.7],[0.80613,1,-36],[0.81,1,-490],[0.85,1,-50],[0.93259,1,-50],[0.9985,1,-100],[1,1,-40],[1.125,1,-3500],[1.13,1,-1500],[1.1739,1,-500],[1.2127,1,-58],[1.2271,1,-128.581],[1.234,1,-150],[1.3,1,-30.0095899],[1.7154,1,-100],[1.725,1,-89.82],[1.74,1,-26],[1.8882,1,-24.975]]]', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:49:04,955 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-02-26 14:49:04,955 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:49:05,013 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-02-26 14:49:05,014 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:49:05,014 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-02-26 14:49:05,015 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-02-26 14:49:05,016 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-02-26 14:49:05,016 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-02-26 14:49:05,016 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
