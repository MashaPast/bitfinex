2020-02-26 14:51:04,479 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-02-26 14:51:04,480 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-02-26 14:51:04,514 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-02-26 14:51:04,558 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f002b49f3c8>)
2020-02-26 14:51:04,559 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-02-26 14:51:04,560 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'd/GWvK1pKxu7eb6+mqFbig=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-02-26 14:51:04,735 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-02-26 14:51:04,736 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-02-26 14:51:04,736 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Wed, 26 Feb 2020 12:51:04 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=d2356364c7a3cca9ac4bb3173becac9691582721464; expires=Fri, 27-Mar-20 12:51:04 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'r8qDdJkjiavpJg0pNhSqYuHPuZs='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56b20c618d0c8701-ARN')])
2020-02-26 14:51:04,736 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-02-26 14:51:04,741 module 'test_raw_books' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-02-26 14:51:04,741 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "book", "prec": "R0", "symbol": "tAMPUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:04,742 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-02-26 14:51:04,743 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"b58faf2b-bc28-4091-b03a-dd85b62c82ed","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:11,402 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<1716 bytes>)
2020-02-26 14:51:11,403 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"book","chanId":3142,"symbol":"tAMPUSD","prec":"R0","freq":"F0","len":"25","pair":"AMPUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:11,404 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[3142,[[40635926762,1.1831,158.13639671],[40575991686,1.1713,147.45934822],[40610864436,1.1598,143.60076635],[40615833028,1.1482,160.40200938],[40635916967,1.1369,263.87545079],[40634278389,1.1368,148.93328002],[40482621260,1.11,250],[40332046080,1.1033,302.04546727],[40163101310,1.02,50],[39945982827,1.0177,25],[40404693925,1.0119,500],[40163120318,1.01,100],[39702106699,1.003,10],[39780666186,1.0025,200],[39559527572,1.002,3935.89333795],[39432786350,0.98,226],[40115662389,0.97891,340.42370222],[40229444560,0.97887,395.04121757],[39653518457,0.9691,100],[39783512737,0.96904,333.41538898],[40630319175,0.95941,1595.69718374],[39697636403,0.9594,413.5393279],[40189022981,0.95929,389.58000552],[37118383165,0.95505,175.88629472],[37085705835,0.95025,201.6323742],[40634461300,1.188,-8.75385841],[40634279197,1.1881,-162.43906549],[40615833667,1.1999,-142.18554983],[40610865105,1.2119,-74.01327041],[40575992470,1.224,-109.10944997],[40635927831,1.2362,-159.11453845],[40634302851,1.2486,-312.42434769],[40615834375,1.261,-280.43370031],[40610882332,1.2736,-308.32204856],[40576007944,1.2863,-276.32905321],[40634708047,1.2991,-302.51871142],[40615835181,1.3233,-269.04752199],[40546523694,1.3311,-300],[36509479785,1.3382,-273.53334945],[40546523693,1.3411,-300],[40576008932,1.3497,-243.72938606],[40549491894,1.3511,-300],[40549491895,1.3611,-300],[36509480426,1.3649,-267.35573084],[40544029208,1.3767,-275.94832237],[36509480990,1.3922,-233.00356448],[36509498542,1.42,-230.60189858],[40635915494,1.6614,-1084.42597385],[39229197590,1.68,-150],[39761102337,1.869,-9.153977]]]', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:11,411 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-02-26 14:51:11,411 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:11,468 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-02-26 14:51:11,469 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:11,469 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-02-26 14:51:11,470 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-02-26 14:51:11,470 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-02-26 14:51:11,471 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-02-26 14:51:11,471 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
