2020-02-26 14:48:55,222 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-02-26 14:48:55,223 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-02-26 14:48:55,249 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-02-26 14:48:55,300 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f002b505898>)
2020-02-26 14:48:55,301 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-02-26 14:48:55,301 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'k7P+CUgBKhFVcvXaJZ7gxA=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-02-26 14:48:55,384 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-02-26 14:48:55,385 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-02-26 14:48:55,385 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Wed, 26 Feb 2020 12:48:55 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=dee5e0a2f4b73d0dc45d19128ab3e74a11582721335; expires=Fri, 27-Mar-20 12:48:55 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'AMLRW2uYsyF1+rxN1KLWJr7/Hv8='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56b20939b9c8b869-WAW')])
2020-02-26 14:48:55,385 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-02-26 14:48:55,386 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-02-26 14:48:55,386 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"f9832b64-6a35-4913-a31c-aeba68604c18","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:48:55,390 module 'test_books_ws' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-02-26 14:48:55,390 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "book", "symbol": "tAIOBTC"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:48:57,061 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<1112 bytes>)
2020-02-26 14:48:57,062 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"book","chanId":957,"symbol":"tAIOBTC","prec":"P0","freq":"F0","len":"25","pair":"AIOBTC"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:48:57,062 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[957,[[0.00001202,2,2415.9733777],[0.00001,1,300],[0.00000672,1,500],[0.00000654,1,500],[0.0000052,1,200],[0.0000025,1,3600],[0.00000124,1,4910.516802],[0.00000119,1,4534.5416],[0.00000117,1,5216.4325],[0.00000115,1,4563.1529],[0.00000109,1,400],[0.00000106,1,3279.000001],[0.000001,1,5000],[8e-7,1,6250],[6.8e-7,1,8000],[3.9e-7,1,300],[3.8e-7,1,9000],[1.6e-7,1,600],[1.5e-7,2,40000],[9e-8,1,10000],[4e-8,1,2000],[3e-8,6,120000],[0.00005488,1,-115.45239916],[0.0000614,1,-2995],[0.00006283,1,-6016.84798108],[0.0000779,1,-2000],[0.000079,2,-507.6],[0.00008158,1,-146.2270724],[0.000086,2,-23976],[0.00009,1,-699.3],[0.00009281,1,-164],[0.00009376,1,-100],[0.00010778,1,-107.72874652],[0.0002,1,-3000],[0.00020276,1,-10],[0.00021,1,-189.31570675],[0.00021062,1,-10],[0.000219,1,-48.902],[0.00023198,1,-49.95],[0.00026092,1,-318.27825723],[0.0003065,1,-49.95],[0.000333,1,-10000],[0.000371,1,-50],[0.00039,1,-79.92],[0.00039005,1,-5.79576956],[0.0004391,1,-45],[0.00045,2,-47.5223747]]]', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:48:57,072 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-02-26 14:48:57,072 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:48:57,136 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-02-26 14:48:57,137 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:48:57,138 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-02-26 14:48:57,139 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-02-26 14:48:57,139 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-02-26 14:48:57,139 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-02-26 14:48:57,140 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
