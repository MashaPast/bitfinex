2020-03-06 17:10:02,380 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-03-06 17:10:02,381 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-03-06 17:10:02,437 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-03-06 17:10:02,565 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f61602014e0>)
2020-03-06 17:10:02,566 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-03-06 17:10:02,566 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', '5c9tntU/RLeRciOkE2+eIw=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-03-06 17:10:02,806 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-03-06 17:10:02,807 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-03-06 17:10:02,807 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Fri, 06 Mar 2020 15:10:02 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=d3167c542e9a2d04283229f30d622767a1583507402; expires=Sun, 05-Apr-20 15:10:02 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'ISxRCL6YLwz6nEfaK+0e54y67WA='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56fd00523dd3fe24-HEL')])
2020-03-06 17:10:02,808 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-03-06 17:10:02,808 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-03-06 17:10:02,809 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"cc0580bb-64a7-4f19-9d58-0c9c3dd11d4b","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:02,811 module 'test_ticker_ws' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-03-06 17:10:02,811 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "ticker", "symbol": "tAIOETH"}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:02,884 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<94 bytes>)
2020-03-06 17:10:02,885 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"ticker","chanId":118542,"symbol":"tAIOETH","pair":"AIOETH"}', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:02,892 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<113 bytes>)
2020-03-06 17:10:02,893 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[118542,[0.0005915,192162.87884343,0.00068901,18934.81838305,0,0,0.00068419,49.05914706,0.00068419,0.00068419]]', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:02,894 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-03-06 17:10:02,895 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:03,008 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-03-06 17:10:03,009 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-03-06 17:10:03,009 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-03-06 17:10:03,010 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-03-06 17:10:03,011 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-03-06 17:10:03,011 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-03-06 17:10:03,011 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
