2020-02-26 14:51:33,287 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-02-26 14:51:33,288 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-02-26 14:51:33,308 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-02-26 14:51:33,345 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f002b5191d0>)
2020-02-26 14:51:33,346 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-02-26 14:51:33,347 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'a9ocxoVXGaKjHn6xtoyWyQ=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-02-26 14:51:33,498 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-02-26 14:51:33,499 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-02-26 14:51:33,499 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Wed, 26 Feb 2020 12:51:33 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=db0948fa474167242f95d06c1e141bc801582721493; expires=Fri, 27-Mar-20 12:51:33 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', '+X4AI0HysTAxBjVwYk8HCL5AXcU='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56b20d157c78f132-ARN')])
2020-02-26 14:51:33,500 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-02-26 14:51:33,504 module 'test_ticker_ws' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-02-26 14:51:33,504 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "ticker", "symbol": "tABSUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:33,505 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-02-26 14:51:33,506 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"b9600fdc-d2c4-442f-9db0-034e10f6fbc1","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:33,574 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<225 bytes>)
2020-02-26 14:51:33,575 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"ticker","chanId":3033,"symbol":"tABSUSD","pair":"ABSUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:33,575 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[3033,[0.0089553,105041.03181879001,0.0093514,170788.72247269002,-0.0013572,-0.1294,0.0091328,13473.06846536,0.010578,0.0091328]]', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:33,581 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-02-26 14:51:33,581 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:33,642 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-02-26 14:51:33,643 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:33,643 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-02-26 14:51:33,644 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-02-26 14:51:33,644 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-02-26 14:51:33,645 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-02-26 14:51:33,645 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
