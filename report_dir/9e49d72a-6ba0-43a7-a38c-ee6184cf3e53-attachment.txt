2020-02-26 14:51:34,397 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-02-26 14:51:34,399 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-02-26 14:51:34,418 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-02-26 14:51:34,469 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f002c004240>)
2020-02-26 14:51:34,469 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-02-26 14:51:34,470 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'ZsNv8Lb1fj1I3Cuge3Plyg=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-02-26 14:51:34,641 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-02-26 14:51:34,642 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-02-26 14:51:34,642 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Wed, 26 Feb 2020 12:51:34 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=d4be02d64f81f01464fd764f8457e60c41582721494; expires=Fri, 27-Mar-20 12:51:34 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'f1J8rTqurAjoULqHQHFpvoL3blM='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56b20d1c8f90daac-ARN')])
2020-02-26 14:51:34,643 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-02-26 14:51:34,644 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-02-26 14:51:34,644 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"a9be967f-f376-48a5-8f8a-c7e1e345a481","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:34,648 module 'test_ticker_ws' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-02-26 14:51:34,649 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "ticker", "symbol": "tAGIUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:34,708 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<199 bytes>)
2020-02-26 14:51:34,709 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"ticker","chanId":2870,"symbol":"tAGIUSD","pair":"AGIUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:34,709 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[2870,[0.02,234086.6550318,0.03417,92635.06177027,-0.001219,-0.0525,0.022,15667.30502316,0.023219,0.022]]', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:34,714 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-02-26 14:51:34,715 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:34,819 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-02-26 14:51:34,820 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:34,820 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-02-26 14:51:34,821 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-02-26 14:51:34,821 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-02-26 14:51:34,822 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-02-26 14:51:34,822 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
