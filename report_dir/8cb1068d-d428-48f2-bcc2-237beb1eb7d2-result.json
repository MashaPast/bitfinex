{"name": "test_trades_response[AGIUSD]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 389.132 < 300", "trace": "symbol = 'AGIUSD'\n\n    @pytest.mark.parametrize(('symbol'), LIST_OF_ARGVALUES[0:20])\n    def test_trades_response(symbol):\n        response = make_request(create_endpoint('trades/t{}/hist'.format(symbol)))\n        response_time = get_response_time(response)\n    \n        headers_data = get_response_headers(response)\n        content_type = get_json_from_asset(os.path.abspath('assets/content_type.json'))\n        body = get_response_body(response)\n        write_response_to_a_file(response, \"resp_text4.txt\")\n    \n        assert response.ok\n>       assert response_time < 300\nE       assert 389.132 < 300\n\nendpoints/trades/test_trades.py:17: AssertionError"}, "attachments": [{"name": "log", "source": "2d695706-557f-470a-be26-51f8d81b8f0d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "symbol", "value": "'AGIUSD'"}], "start": 1581535630610, "stop": 1581535631012, "uuid": "5510cb53-28b6-4af4-9d75-7ac9462e821d", "historyId": "035e8f0b12f179391b19a358a27b407e", "fullName": "endpoints.trades.test_trades#test_trades_response[AGIUSD]", "labels": [{"name": "parentSuite", "value": "endpoints.trades"}, {"name": "suite", "value": "test_trades"}, {"name": "subSuite"}, {"name": "host", "value": "local"}, {"name": "thread", "value": "13261-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "endpoints.trades.test_trades"}]}