2020-02-26 14:49:38,468 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-02-26 14:49:38,469 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-02-26 14:49:38,495 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-02-26 14:49:38,552 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f002b5198d0>)
2020-02-26 14:49:38,553 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-02-26 14:49:38,553 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'tjnohh4JwXuInkEmDJ7mZg=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-02-26 14:49:38,734 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-02-26 14:49:38,735 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-02-26 14:49:38,735 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Wed, 26 Feb 2020 12:49:38 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=d6a7e1f79f407eb6d2abfe828577805a91582721378; expires=Fri, 27-Mar-20 12:49:38 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'JzM4EY3NBt4IYUUEOWxzxUmiDKs='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56b20a480c26b84b-WAW')])
2020-02-26 14:49:38,736 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-02-26 14:49:38,737 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-02-26 14:49:38,737 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"05aea17d-e6ba-4e2b-b4df-edbd9333d503","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:49:38,741 module 'test_books_ws' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-02-26 14:49:38,741 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "book", "symbol": "tANTUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:49:42,612 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<944 bytes>)
2020-02-26 14:49:42,613 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"book","chanId":3513,"symbol":"tANTUSD","prec":"P0","freq":"F0","len":"25","pair":"ANTUSD"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:49:42,613 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[3513,[[1.05,1,165.84243],[1.0473,1,1855.98819727],[1.0314,1,3620],[1.021,1,1654],[1.0013,1,299.61050633],[1.001,1,1498.5014985],[1.0002,1,946],[0.98974,1,993],[0.97933,1,1835],[0.96891,1,1768],[0.85821,1,11.65206279],[0.77,1,21],[0.74,1,8],[0.63769,1,33],[0.61739,1,1414.847305],[0.45,1,9],[0.4,2,109],[0.35,1,9],[0.33,1,742.391774],[0.3,1,9],[0.25,1,9],[0.2215,1,10],[0.205,1,1000],[0.2,4,5280.057393],[0.17,2,1155],[1.0939,1,-788],[1.1043,1,-993],[1.1356,1,-904],[1.158,1,-127.09868],[1.16,1,-166.54529102],[1.1981,1,-1698],[1.2502,1,-2904],[1.38,2,-400],[1.4,2,-400],[1.45,2,-225],[1.4855,1,-500],[1.49,1,-4],[1.85,2,-59.5],[1.9,1,-40],[1.92,1,-797],[2.597,1,-6],[2.98,1,-25],[3,1,-10],[3.0143,1,-14.985],[3.127,1,-4.98],[3.33,1,-1033.059449],[3.88,1,-4],[4,2,-74.30996244],[4.375,1,-40],[4.39,2,-84.67798529]]]', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:49:42,619 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-02-26 14:49:42,620 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:49:42,683 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-02-26 14:49:42,683 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:49:42,684 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-02-26 14:49:42,685 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-02-26 14:49:42,685 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-02-26 14:49:42,686 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-02-26 14:49:42,686 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
