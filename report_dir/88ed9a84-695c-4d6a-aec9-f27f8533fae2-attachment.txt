2020-02-26 14:51:35,967 module 'selector_events' function '__init__' DEBUG -> Using selector: EpollSelector
2020-02-26 14:51:35,968 module 'conftest' function 'connection_fixture' DEBUG -> Start connection
2020-02-26 14:51:36,008 module 'protocol' function '__init__' DEBUG -> client - state = CONNECTING
2020-02-26 14:51:36,064 module 'protocol' function 'connection_made' DEBUG -> client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x7f002b524fd0>)
2020-02-26 14:51:36,065 module 'client' function 'write_http_request' DEBUG -> client > GET /ws/2 HTTP/1.1
2020-02-26 14:51:36,066 module 'client' function 'write_http_request' DEBUG -> client > Headers([('Host', 'api-pub.bitfinex.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', '5B6I3LUfguyDPwQxTzpYKQ=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.6 websockets/8.1')])
2020-02-26 14:51:36,229 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<758 bytes>)
2020-02-26 14:51:36,231 module 'client' function 'read_http_response' DEBUG -> client < HTTP/1.1 101 Switching Protocols
2020-02-26 14:51:36,231 module 'client' function 'read_http_response' DEBUG -> client < Headers([('Date', 'Wed, 26 Feb 2020 12:51:36 GMT'), ('Connection', 'upgrade'), ('Set-Cookie', '__cfduid=dee1599185fb97a135419378489381c011582721496; expires=Fri, 27-Mar-20 12:51:36 GMT; path=/; domain=.bitfinex.com; HttpOnly; SameSite=Lax'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'qGZUa+to6xQtdGaTd+rjyfoRZJE='), ('X-Frame-Options', 'sameorigin'), ('X-XSS-Protection', '1; mode=block'), ('Referrer-Policy', 'same-origin'), ('X-Download-Options', 'noopen'), ('X-Content-Type-Options', 'nosniff'), ('X-Permitted-Cross-Domain-Policies', 'none'), ('Strict-Transport-Security', 'max-age=31536000; includeSubdomains;'), ('CF-Cache-Status', 'DYNAMIC'), ('Expect-CT', 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"'), ('Server', 'cloudflare'), ('CF-RAY', '56b20d267bffcc77-WAW')])
2020-02-26 14:51:36,232 module 'protocol' function 'connection_open' DEBUG -> client - state = OPEN
2020-02-26 14:51:36,237 module 'test_ticker_ws' function 'test_subscribe_to_action' DEBUG -> Subscribing to server
2020-02-26 14:51:36,238 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=1, data=b'{ "event": "subscribe", "channel": "ticker", "symbol": "tAIOBTC"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:36,238 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<104 bytes>)
2020-02-26 14:51:36,239 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"info","version":2,"serverId":"9a0bbd74-a641-413a-92f7-30d066780c64","platform":{"status":1}}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:36,348 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<218 bytes>)
2020-02-26 14:51:36,349 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'{"event":"subscribed","channel":"ticker","chanId":3496,"symbol":"tAIOBTC","pair":"AIOBTC"}', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:36,349 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=1, data=b'[3496,[0.00005488,231569.84762241,0.0000614,50673.72971891,0.00004088,0.4088,0.00005488,145184.0994804,0.00005488,0.000014]]', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:36,356 module 'protocol' function 'write_close_frame' DEBUG -> client - state = CLOSING
2020-02-26 14:51:36,357 module 'protocol' function 'write_frame' DEBUG -> client > Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:36,425 module 'protocol' function 'data_received' DEBUG -> client - event = data_received(<4 bytes>)
2020-02-26 14:51:36,426 module 'protocol' function 'read_frame' DEBUG -> client < Frame(fin=True, opcode=8, data=b'\x03\xe8', rsv1=False, rsv2=False, rsv3=False)
2020-02-26 14:51:36,431 module 'protocol' function 'eof_received' DEBUG -> client - event = eof_received()
2020-02-26 14:51:36,432 module 'protocol' function 'connection_lost' DEBUG -> client - event = connection_lost(None)
2020-02-26 14:51:36,432 module 'protocol' function 'connection_lost' DEBUG -> client - state = CLOSED
2020-02-26 14:51:36,432 module 'protocol' function 'connection_lost' DEBUG -> client x code = 1000, reason = [no reason]
2020-02-26 14:51:36,433 module 'protocol' function 'close_connection' DEBUG -> client x closing TCP connection
